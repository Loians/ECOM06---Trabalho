Terminais sem uso na gramática

    VIRGULA
    EXPPARS
    EXPOPS
    EXPSUB
    NOVAVAR
    ATRIBUIR
    ATRIBUIRFIM
    NOTVAR
    OPCOMP
    OPLOGICA


Estado 1 conflitos: 9 de deslocamento/redução
Estado 13 conflitos: 10 de deslocamento/redução
Estado 57 conflitos: 9 de deslocamento/redução
Estado 59 conflitos: 4 de deslocamento/redução
Estado 83 conflitos: 10 de deslocamento/redução
Estado 86 conflitos: 4 de deslocamento/redução
Estado 90 conflitos: 9 de deslocamento/redução
Estado 91 conflitos: 9 de deslocamento/redução
Estado 96 conflitos: 10 de deslocamento/redução
Estado 97 conflitos: 10 de deslocamento/redução
Estado 102 conflitos: 9 de deslocamento/redução
Estado 103 conflitos: 10 de deslocamento/redução


Gramática

    0 $accept: inicio $end

    1 inicio: INICIOPROG sentencas FIMPROG

    2 sentenca: atribuirfim
    3         | novavar
    4         | escrever
    5         | ler
    6         | loopfor
    7         | loopwhile
    8         | condifelse
    9         | %empty

   10 sentencas: sentenca
   11          | sentencas sentenca

   12 varint: VARIAVEL
   13       | INT

   14 valor: CHAR
   15      | REAL
   16      | varint

   17 opmod: varint MOD varint

   18 operacoes: SOMA
   19          | SUB
   20          | MULTI
   21          | DIVI

   22 expressaoA: ABREP expressaoA FECHAP
   23           | expressaoA operacoes expressaoA
   24           | SUB expressaoA
   25           | valor
   26           | opmod

   27 tipos: T_INT
   28      | T_CHAR
   29      | T_REAL

   30 novavar: tipos VARIAVEL PTVIRGULA

   31 $@1: %empty

   32 atribuir: VARIAVEL $@1 ATRIBUICAO expressaoA

   33 atribuirfim: atribuir PTVIRGULA

   34 escrever: SAIDA ABREP expressaoA FECHAP PTVIRGULA

   35 ler: ENTRADA ABREP VARIAVEL FECHAP PTVIRGULA

   36 operadorL: AND
   37          | OR

   38 varlogica: NOT expressaoA
   39          | expressaoA

   40 relacional: IGUAL
   41           | MAIORIGUAL
   42           | MENORIGUAL
   43           | MAIOR
   44           | MENOR
   45           | DIFERENTE

   46 opcomp: expressaoA relacional expressaoA

   47 oplogica: varlogica operadorL varlogica

   48 opLogicas: oplogica
   49          | opcomp
   50          | varlogica

   51 condif: IF ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

   52 condifelse: condif
   53           | condif ELSE INICIOBLOCO sentencas FIMBLOCO

   54 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO

   55 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    VARIAVEL (258) 12 30 32 35
    INT (259) 13
    CHAR (260) 14
    REAL (261) 15
    ATRIBUICAO (262) 32
    SOMA (263) 18
    SUB (264) 19 24
    MULTI (265) 20
    DIVI (266) 21
    MOD (267) 17
    AND (268) 36
    OR (269) 37
    NOT (270) 38
    IGUAL (271) 40
    MAIORIGUAL (272) 41
    MENORIGUAL (273) 42
    MAIOR (274) 43
    MENOR (275) 44
    DIFERENTE (276) 45
    VIRGULA (277)
    PTVIRGULA (278) 30 33 34 35 54
    ABREP (279) 22 34 35 51 54 55
    FECHAP (280) 22 34 35 51 54 55
    INICIOBLOCO (281) 51 53 54 55
    FIMBLOCO (282) 51 53 54 55
    INICIOPROG (283) 1
    FIMPROG (284) 1
    T_INT (285) 27
    T_CHAR (286) 28
    T_REAL (287) 29
    IF (288) 51
    ELSE (289) 53
    WHILE (290) 55
    FOR (291) 54
    ENTRADA (292) 35
    SAIDA (293) 34
    EXPPARS (294)
    EXPOPS (295)
    EXPSUB (296)
    NOVAVAR (297)
    ATRIBUIR (298)
    ATRIBUIRFIM (299)
    NOTVAR (300)
    OPCOMP (301)
    OPLOGICA (302)


Não terminais com as regras onde eles aparecem

    $accept (48)
        à esquerda: 0
    inicio (49)
        à esquerda: 1
        à direita: 0
    sentenca <nos> (50)
        à esquerda: 2 3 4 5 6 7 8 9
        à direita: 10 11
    sentencas <nos> (51)
        à esquerda: 10 11
        à direita: 1 11 51 53 54 55
    varint <nos> (52)
        à esquerda: 12 13
        à direita: 16 17
    valor <nos> (53)
        à esquerda: 14 15 16
        à direita: 25
    opmod <nos> (54)
        à esquerda: 17
        à direita: 26
    operacoes <tipoint> (55)
        à esquerda: 18 19 20 21
        à direita: 23
    expressaoA <nos> (56)
        à esquerda: 22 23 24 25 26
        à direita: 22 23 24 32 34 38 39 46
    tipos <tipoint> (57)
        à esquerda: 27 28 29
        à direita: 30
    novavar <nos> (58)
        à esquerda: 30
        à direita: 3
    atribuir <nos> (59)
        à esquerda: 32
        à direita: 33 54
    $@1 (60)
        à esquerda: 31
        à direita: 32
    atribuirfim <nos> (61)
        à esquerda: 33
        à direita: 2 54
    escrever <nos> (62)
        à esquerda: 34
        à direita: 4
    ler <nos> (63)
        à esquerda: 35
        à direita: 5
    operadorL <tipoint> (64)
        à esquerda: 36 37
        à direita: 47
    varlogica <nos> (65)
        à esquerda: 38 39
        à direita: 47 50
    relacional <tipoint> (66)
        à esquerda: 40 41 42 43 44 45
        à direita: 46
    opcomp <nos> (67)
        à esquerda: 46
        à direita: 49
    oplogica <nos> (68)
        à esquerda: 47
        à direita: 48
    opLogicas <nos> (69)
        à esquerda: 48 49 50
        à direita: 51 54 55
    condif <nos> (70)
        à esquerda: 51
        à direita: 52 53
    condifelse <nos> (71)
        à esquerda: 52 53
        à direita: 8
    loopfor <nos> (72)
        à esquerda: 54
        à direita: 6
    loopwhile <nos> (73)
        à esquerda: 55
        à direita: 7


Estado 0

    0 $accept: . inicio $end

    INICIOPROG  deslocar, e ir ao estado 1

    inicio  ir ao estado 2


Estado 1

    1 inicio: INICIOPROG . sentencas FIMPROG

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]
    $padrão  reduzir usando a regra 9 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 13
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 2

    0 $accept: inicio . $end

    $end  deslocar, e ir ao estado 24


Estado 3

   32 atribuir: VARIAVEL . $@1 ATRIBUICAO expressaoA

    $padrão  reduzir usando a regra 31 ($@1)

    $@1  ir ao estado 25


Estado 4

   27 tipos: T_INT .

    $padrão  reduzir usando a regra 27 (tipos)


Estado 5

   28 tipos: T_CHAR .

    $padrão  reduzir usando a regra 28 (tipos)


Estado 6

   29 tipos: T_REAL .

    $padrão  reduzir usando a regra 29 (tipos)


Estado 7

   51 condif: IF . ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    ABREP  deslocar, e ir ao estado 26


Estado 8

   55 loopwhile: WHILE . ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    ABREP  deslocar, e ir ao estado 27


Estado 9

   54 loopfor: FOR . ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO

    ABREP  deslocar, e ir ao estado 28


Estado 10

   35 ler: ENTRADA . ABREP VARIAVEL FECHAP PTVIRGULA

    ABREP  deslocar, e ir ao estado 29


Estado 11

   34 escrever: SAIDA . ABREP expressaoA FECHAP PTVIRGULA

    ABREP  deslocar, e ir ao estado 30


Estado 12

   10 sentencas: sentenca .

    $padrão  reduzir usando a regra 10 (sentencas)


Estado 13

    1 inicio: INICIOPROG sentencas . FIMPROG
   11 sentencas: sentencas . sentenca

    VARIAVEL  deslocar, e ir ao estado 3
    FIMPROG   deslocar, e ir ao estado 31
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    FIMPROG   [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]

    sentenca     ir ao estado 32
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 14

   30 novavar: tipos . VARIAVEL PTVIRGULA

    VARIAVEL  deslocar, e ir ao estado 33


Estado 15

    3 sentenca: novavar .

    $padrão  reduzir usando a regra 3 (sentenca)


Estado 16

   33 atribuirfim: atribuir . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 34


Estado 17

    2 sentenca: atribuirfim .

    $padrão  reduzir usando a regra 2 (sentenca)


Estado 18

    4 sentenca: escrever .

    $padrão  reduzir usando a regra 4 (sentenca)


Estado 19

    5 sentenca: ler .

    $padrão  reduzir usando a regra 5 (sentenca)


Estado 20

   52 condifelse: condif .
   53           | condif . ELSE INICIOBLOCO sentencas FIMBLOCO

    ELSE  deslocar, e ir ao estado 35

    $padrão  reduzir usando a regra 52 (condifelse)


Estado 21

    8 sentenca: condifelse .

    $padrão  reduzir usando a regra 8 (sentenca)


Estado 22

    6 sentenca: loopfor .

    $padrão  reduzir usando a regra 6 (sentenca)


Estado 23

    7 sentenca: loopwhile .

    $padrão  reduzir usando a regra 7 (sentenca)


Estado 24

    0 $accept: inicio $end .

    $padrão  aceitar


Estado 25

   32 atribuir: VARIAVEL $@1 . ATRIBUICAO expressaoA

    ATRIBUICAO  deslocar, e ir ao estado 36


Estado 26

   51 condif: IF ABREP . opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    NOT       deslocar, e ir ao estado 42
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 47
    varlogica   ir ao estado 48
    opcomp      ir ao estado 49
    oplogica    ir ao estado 50
    opLogicas   ir ao estado 51


Estado 27

   55 loopwhile: WHILE ABREP . opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    NOT       deslocar, e ir ao estado 42
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 47
    varlogica   ir ao estado 48
    opcomp      ir ao estado 49
    oplogica    ir ao estado 50
    opLogicas   ir ao estado 52


Estado 28

   54 loopfor: FOR ABREP . atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3

    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 53


Estado 29

   35 ler: ENTRADA ABREP . VARIAVEL FECHAP PTVIRGULA

    VARIAVEL  deslocar, e ir ao estado 54


Estado 30

   34 escrever: SAIDA ABREP . expressaoA FECHAP PTVIRGULA

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 55


Estado 31

    1 inicio: INICIOPROG sentencas FIMPROG .

    $padrão  reduzir usando a regra 1 (inicio)


Estado 32

   11 sentencas: sentencas sentenca .

    $padrão  reduzir usando a regra 11 (sentencas)


Estado 33

   30 novavar: tipos VARIAVEL . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 56


Estado 34

   33 atribuirfim: atribuir PTVIRGULA .

    $padrão  reduzir usando a regra 33 (atribuirfim)


Estado 35

   53 condifelse: condif ELSE . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 57


Estado 36

   32 atribuir: VARIAVEL $@1 ATRIBUICAO . expressaoA

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 58


Estado 37

   12 varint: VARIAVEL .

    $padrão  reduzir usando a regra 12 (varint)


Estado 38

   13 varint: INT .

    $padrão  reduzir usando a regra 13 (varint)


Estado 39

   14 valor: CHAR .

    $padrão  reduzir usando a regra 14 (valor)


Estado 40

   15 valor: REAL .

    $padrão  reduzir usando a regra 15 (valor)


Estado 41

   24 expressaoA: SUB . expressaoA

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 59


Estado 42

   38 varlogica: NOT . expressaoA

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 60


Estado 43

   22 expressaoA: ABREP . expressaoA FECHAP

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 61


Estado 44

   16 valor: varint .
   17 opmod: varint . MOD varint

    MOD  deslocar, e ir ao estado 62

    $padrão  reduzir usando a regra 16 (valor)


Estado 45

   25 expressaoA: valor .

    $padrão  reduzir usando a regra 25 (expressaoA)


Estado 46

   26 expressaoA: opmod .

    $padrão  reduzir usando a regra 26 (expressaoA)


Estado 47

   23 expressaoA: expressaoA . operacoes expressaoA
   39 varlogica: expressaoA .
   46 opcomp: expressaoA . relacional expressaoA

    SOMA        deslocar, e ir ao estado 63
    SUB         deslocar, e ir ao estado 64
    MULTI       deslocar, e ir ao estado 65
    DIVI        deslocar, e ir ao estado 66
    IGUAL       deslocar, e ir ao estado 67
    MAIORIGUAL  deslocar, e ir ao estado 68
    MENORIGUAL  deslocar, e ir ao estado 69
    MAIOR       deslocar, e ir ao estado 70
    MENOR       deslocar, e ir ao estado 71
    DIFERENTE   deslocar, e ir ao estado 72

    $padrão  reduzir usando a regra 39 (varlogica)

    operacoes   ir ao estado 73
    relacional  ir ao estado 74


Estado 48

   47 oplogica: varlogica . operadorL varlogica
   50 opLogicas: varlogica .

    AND  deslocar, e ir ao estado 75
    OR   deslocar, e ir ao estado 76

    $padrão  reduzir usando a regra 50 (opLogicas)

    operadorL  ir ao estado 77


Estado 49

   49 opLogicas: opcomp .

    $padrão  reduzir usando a regra 49 (opLogicas)


Estado 50

   48 opLogicas: oplogica .

    $padrão  reduzir usando a regra 48 (opLogicas)


Estado 51

   51 condif: IF ABREP opLogicas . FECHAP INICIOBLOCO sentencas FIMBLOCO

    FECHAP  deslocar, e ir ao estado 78


Estado 52

   55 loopwhile: WHILE ABREP opLogicas . FECHAP INICIOBLOCO sentencas FIMBLOCO

    FECHAP  deslocar, e ir ao estado 79


Estado 53

   54 loopfor: FOR ABREP atribuirfim . opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    NOT       deslocar, e ir ao estado 42
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 47
    varlogica   ir ao estado 48
    opcomp      ir ao estado 49
    oplogica    ir ao estado 50
    opLogicas   ir ao estado 80


Estado 54

   35 ler: ENTRADA ABREP VARIAVEL . FECHAP PTVIRGULA

    FECHAP  deslocar, e ir ao estado 81


Estado 55

   23 expressaoA: expressaoA . operacoes expressaoA
   34 escrever: SAIDA ABREP expressaoA . FECHAP PTVIRGULA

    SOMA    deslocar, e ir ao estado 63
    SUB     deslocar, e ir ao estado 64
    MULTI   deslocar, e ir ao estado 65
    DIVI    deslocar, e ir ao estado 66
    FECHAP  deslocar, e ir ao estado 82

    operacoes  ir ao estado 73


Estado 56

   30 novavar: tipos VARIAVEL PTVIRGULA .

    $padrão  reduzir usando a regra 30 (novavar)


Estado 57

   53 condifelse: condif ELSE INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]
    $padrão  reduzir usando a regra 9 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 83
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 58

   23 expressaoA: expressaoA . operacoes expressaoA
   32 atribuir: VARIAVEL $@1 ATRIBUICAO expressaoA .

    SOMA   deslocar, e ir ao estado 63
    SUB    deslocar, e ir ao estado 64
    MULTI  deslocar, e ir ao estado 65
    DIVI   deslocar, e ir ao estado 66

    $padrão  reduzir usando a regra 32 (atribuir)

    operacoes  ir ao estado 73


Estado 59

   23 expressaoA: expressaoA . operacoes expressaoA
   24           | SUB expressaoA .

    SOMA   deslocar, e ir ao estado 63
    SUB    deslocar, e ir ao estado 64
    MULTI  deslocar, e ir ao estado 65
    DIVI   deslocar, e ir ao estado 66

    SOMA      [reduzir usando a regra 24 (expressaoA)]
    SUB       [reduzir usando a regra 24 (expressaoA)]
    MULTI     [reduzir usando a regra 24 (expressaoA)]
    DIVI      [reduzir usando a regra 24 (expressaoA)]
    $padrão  reduzir usando a regra 24 (expressaoA)

    operacoes  ir ao estado 73


Estado 60

   23 expressaoA: expressaoA . operacoes expressaoA
   38 varlogica: NOT expressaoA .

    SOMA   deslocar, e ir ao estado 63
    SUB    deslocar, e ir ao estado 64
    MULTI  deslocar, e ir ao estado 65
    DIVI   deslocar, e ir ao estado 66

    $padrão  reduzir usando a regra 38 (varlogica)

    operacoes  ir ao estado 73


Estado 61

   22 expressaoA: ABREP expressaoA . FECHAP
   23           | expressaoA . operacoes expressaoA

    SOMA    deslocar, e ir ao estado 63
    SUB     deslocar, e ir ao estado 64
    MULTI   deslocar, e ir ao estado 65
    DIVI    deslocar, e ir ao estado 66
    FECHAP  deslocar, e ir ao estado 84

    operacoes  ir ao estado 73


Estado 62

   17 opmod: varint MOD . varint

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38

    varint  ir ao estado 85


Estado 63

   18 operacoes: SOMA .

    $padrão  reduzir usando a regra 18 (operacoes)


Estado 64

   19 operacoes: SUB .

    $padrão  reduzir usando a regra 19 (operacoes)


Estado 65

   20 operacoes: MULTI .

    $padrão  reduzir usando a regra 20 (operacoes)


Estado 66

   21 operacoes: DIVI .

    $padrão  reduzir usando a regra 21 (operacoes)


Estado 67

   40 relacional: IGUAL .

    $padrão  reduzir usando a regra 40 (relacional)


Estado 68

   41 relacional: MAIORIGUAL .

    $padrão  reduzir usando a regra 41 (relacional)


Estado 69

   42 relacional: MENORIGUAL .

    $padrão  reduzir usando a regra 42 (relacional)


Estado 70

   43 relacional: MAIOR .

    $padrão  reduzir usando a regra 43 (relacional)


Estado 71

   44 relacional: MENOR .

    $padrão  reduzir usando a regra 44 (relacional)


Estado 72

   45 relacional: DIFERENTE .

    $padrão  reduzir usando a regra 45 (relacional)


Estado 73

   23 expressaoA: expressaoA operacoes . expressaoA

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 86


Estado 74

   46 opcomp: expressaoA relacional . expressaoA

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 87


Estado 75

   36 operadorL: AND .

    $padrão  reduzir usando a regra 36 (operadorL)


Estado 76

   37 operadorL: OR .

    $padrão  reduzir usando a regra 37 (operadorL)


Estado 77

   47 oplogica: varlogica operadorL . varlogica

    VARIAVEL  deslocar, e ir ao estado 37
    INT       deslocar, e ir ao estado 38
    CHAR      deslocar, e ir ao estado 39
    REAL      deslocar, e ir ao estado 40
    SUB       deslocar, e ir ao estado 41
    NOT       deslocar, e ir ao estado 42
    ABREP     deslocar, e ir ao estado 43

    varint      ir ao estado 44
    valor       ir ao estado 45
    opmod       ir ao estado 46
    expressaoA  ir ao estado 88
    varlogica   ir ao estado 89


Estado 78

   51 condif: IF ABREP opLogicas FECHAP . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 90


Estado 79

   55 loopwhile: WHILE ABREP opLogicas FECHAP . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 91


Estado 80

   54 loopfor: FOR ABREP atribuirfim opLogicas . PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO

    PTVIRGULA  deslocar, e ir ao estado 92


Estado 81

   35 ler: ENTRADA ABREP VARIAVEL FECHAP . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 93


Estado 82

   34 escrever: SAIDA ABREP expressaoA FECHAP . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 94


Estado 83

   11 sentencas: sentencas . sentenca
   53 condifelse: condif ELSE INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 95
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]

    sentenca     ir ao estado 32
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 84

   22 expressaoA: ABREP expressaoA FECHAP .

    $padrão  reduzir usando a regra 22 (expressaoA)


Estado 85

   17 opmod: varint MOD varint .

    $padrão  reduzir usando a regra 17 (opmod)


Estado 86

   23 expressaoA: expressaoA . operacoes expressaoA
   23           | expressaoA operacoes expressaoA .

    SOMA   deslocar, e ir ao estado 63
    SUB    deslocar, e ir ao estado 64
    MULTI  deslocar, e ir ao estado 65
    DIVI   deslocar, e ir ao estado 66

    SOMA      [reduzir usando a regra 23 (expressaoA)]
    SUB       [reduzir usando a regra 23 (expressaoA)]
    MULTI     [reduzir usando a regra 23 (expressaoA)]
    DIVI      [reduzir usando a regra 23 (expressaoA)]
    $padrão  reduzir usando a regra 23 (expressaoA)

    operacoes  ir ao estado 73


Estado 87

   23 expressaoA: expressaoA . operacoes expressaoA
   46 opcomp: expressaoA relacional expressaoA .

    SOMA   deslocar, e ir ao estado 63
    SUB    deslocar, e ir ao estado 64
    MULTI  deslocar, e ir ao estado 65
    DIVI   deslocar, e ir ao estado 66

    $padrão  reduzir usando a regra 46 (opcomp)

    operacoes  ir ao estado 73


Estado 88

   23 expressaoA: expressaoA . operacoes expressaoA
   39 varlogica: expressaoA .

    SOMA   deslocar, e ir ao estado 63
    SUB    deslocar, e ir ao estado 64
    MULTI  deslocar, e ir ao estado 65
    DIVI   deslocar, e ir ao estado 66

    $padrão  reduzir usando a regra 39 (varlogica)

    operacoes  ir ao estado 73


Estado 89

   47 oplogica: varlogica operadorL varlogica .

    $padrão  reduzir usando a regra 47 (oplogica)


Estado 90

   51 condif: IF ABREP opLogicas FECHAP INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]
    $padrão  reduzir usando a regra 9 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 96
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 91

   55 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]
    $padrão  reduzir usando a regra 9 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 97
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 92

   54 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA . atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3

    atribuir  ir ao estado 98


Estado 93

   35 ler: ENTRADA ABREP VARIAVEL FECHAP PTVIRGULA .

    $padrão  reduzir usando a regra 35 (ler)


Estado 94

   34 escrever: SAIDA ABREP expressaoA FECHAP PTVIRGULA .

    $padrão  reduzir usando a regra 34 (escrever)


Estado 95

   53 condifelse: condif ELSE INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 53 (condifelse)


Estado 96

   11 sentencas: sentencas . sentenca
   51 condif: IF ABREP opLogicas FECHAP INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 99
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]

    sentenca     ir ao estado 32
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 97

   11 sentencas: sentencas . sentenca
   55 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 100
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]

    sentenca     ir ao estado 32
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 98

   54 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir . FECHAP INICIOBLOCO sentencas FIMBLOCO

    FECHAP  deslocar, e ir ao estado 101


Estado 99

   51 condif: IF ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 51 (condif)


Estado 100

   55 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 55 (loopwhile)


Estado 101

   54 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 102


Estado 102

   54 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]
    $padrão  reduzir usando a regra 9 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 103
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 103

   11 sentencas: sentencas . sentenca
   54 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 104
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 9 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 9 (sentenca)]
    T_INT     [reduzir usando a regra 9 (sentenca)]
    T_CHAR    [reduzir usando a regra 9 (sentenca)]
    T_REAL    [reduzir usando a regra 9 (sentenca)]
    IF        [reduzir usando a regra 9 (sentenca)]
    WHILE     [reduzir usando a regra 9 (sentenca)]
    FOR       [reduzir usando a regra 9 (sentenca)]
    ENTRADA   [reduzir usando a regra 9 (sentenca)]
    SAIDA     [reduzir usando a regra 9 (sentenca)]

    sentenca     ir ao estado 32
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    escrever     ir ao estado 18
    ler          ir ao estado 19
    condif       ir ao estado 20
    condifelse   ir ao estado 21
    loopfor      ir ao estado 22
    loopwhile    ir ao estado 23


Estado 104

   54 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 54 (loopfor)
