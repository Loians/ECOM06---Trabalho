Terminais sem uso na gramática

    VIRGULA
    EXPPARS
    EXPOPS
    EXPSUB
    NOVAVAR
    ATRIBUIR
    ADDFIM
    NOTVAR
    OPCOMP
    OPLOGICA
    POSINC
    POSDEC
    INCDECFIM


Estado 1 conflitos: 9 de deslocamento/redução
Estado 13 conflitos: 10 de deslocamento/redução
Estado 67 conflitos: 9 de deslocamento/redução
Estado 69 conflitos: 4 de deslocamento/redução
Estado 93 conflitos: 10 de deslocamento/redução
Estado 96 conflitos: 4 de deslocamento/redução
Estado 100 conflitos: 9 de deslocamento/redução
Estado 101 conflitos: 9 de deslocamento/redução
Estado 106 conflitos: 10 de deslocamento/redução
Estado 107 conflitos: 10 de deslocamento/redução
Estado 114 conflitos: 9 de deslocamento/redução
Estado 115 conflitos: 9 de deslocamento/redução
Estado 116 conflitos: 10 de deslocamento/redução
Estado 117 conflitos: 10 de deslocamento/redução


Gramática

    0 $accept: inicio $end

    1 inicio: INICIOPROG sentencas FIMPROG

    2 sentenca: atribuirfim
    3         | novavar
    4         | escrever
    5         | ler
    6         | loopfor
    7         | loopwhile
    8         | condifelse
    9         | incdecfim
   10         | %empty

   11 sentencas: sentenca
   12          | sentencas sentenca

   13 varint: VARIAVEL
   14       | INT

   15 valor: CHAR
   16      | REAL
   17      | varint

   18 opmod: varint MOD varint

   19 operacoes: SOMA
   20          | SUB
   21          | MULTI
   22          | DIVI

   23 expressaoA: ABREP expressaoA FECHAP
   24           | expressaoA operacoes expressaoA
   25           | SUB expressaoA
   26           | valor
   27           | opmod

   28 tipos: T_INT
   29      | T_CHAR
   30      | T_REAL

   31 novavar: tipos VARIAVEL PTVIRGULA

   32 $@1: %empty

   33 atribuir: VARIAVEL $@1 ATRIBUICAO expressaoA

   34 atribuirfim: atribuir PTVIRGULA

   35 posinc: VARIAVEL SOMA SOMA

   36 posdec: VARIAVEL SUB SUB

   37 incdec: posinc
   38       | posdec

   39 incdecfim: incdec PTVIRGULA

   40 escrever: SAIDA ABREP expressaoA FECHAP PTVIRGULA

   41 ler: ENTRADA ABREP VARIAVEL FECHAP PTVIRGULA

   42 operadorL: AND
   43          | OR

   44 varlogica: NOT expressaoA
   45          | expressaoA

   46 relacional: IGUAL
   47           | MAIORIGUAL
   48           | MENORIGUAL
   49           | MAIOR
   50           | MENOR
   51           | DIFERENTE

   52 opcomp: expressaoA relacional expressaoA

   53 oplogica: varlogica operadorL varlogica

   54 opLogicas: oplogica
   55          | opcomp
   56          | varlogica

   57 condif: IF ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

   58 condifelse: condif
   59           | condif ELSE INICIOBLOCO sentencas FIMBLOCO

   60 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO
   61        | FOR ABREP atribuirfim opLogicas PTVIRGULA incdec FECHAP INICIOBLOCO sentencas FIMBLOCO

   62 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    VARIAVEL (258) 13 31 33 35 36 41
    INT (259) 14
    CHAR (260) 15
    REAL (261) 16
    ATRIBUICAO (262) 33
    SOMA (263) 19 35
    SUB (264) 20 25 36
    MULTI (265) 21
    DIVI (266) 22
    MOD (267) 18
    AND (268) 42
    OR (269) 43
    NOT (270) 44
    IGUAL (271) 46
    MAIORIGUAL (272) 47
    MENORIGUAL (273) 48
    MAIOR (274) 49
    MENOR (275) 50
    DIFERENTE (276) 51
    VIRGULA (277)
    PTVIRGULA (278) 31 34 39 40 41 60 61
    ABREP (279) 23 40 41 57 60 61 62
    FECHAP (280) 23 40 41 57 60 61 62
    INICIOBLOCO (281) 57 59 60 61 62
    FIMBLOCO (282) 57 59 60 61 62
    INICIOPROG (283) 1
    FIMPROG (284) 1
    T_INT (285) 28
    T_CHAR (286) 29
    T_REAL (287) 30
    IF (288) 57
    ELSE (289) 59
    WHILE (290) 62
    FOR (291) 60 61
    ENTRADA (292) 41
    SAIDA (293) 40
    EXPPARS (294)
    EXPOPS (295)
    EXPSUB (296)
    NOVAVAR (297)
    ATRIBUIR (298)
    ADDFIM (299)
    NOTVAR (300)
    OPCOMP (301)
    OPLOGICA (302)
    POSINC (303)
    POSDEC (304)
    INCDECFIM (305)


Não terminais com as regras onde eles aparecem

    $accept (51)
        à esquerda: 0
    inicio (52)
        à esquerda: 1
        à direita: 0
    sentenca <nos> (53)
        à esquerda: 2 3 4 5 6 7 8 9 10
        à direita: 11 12
    sentencas <nos> (54)
        à esquerda: 11 12
        à direita: 1 12 57 59 60 61 62
    varint <nos> (55)
        à esquerda: 13 14
        à direita: 17 18
    valor <nos> (56)
        à esquerda: 15 16 17
        à direita: 26
    opmod <nos> (57)
        à esquerda: 18
        à direita: 27
    operacoes <tipoint> (58)
        à esquerda: 19 20 21 22
        à direita: 24
    expressaoA <nos> (59)
        à esquerda: 23 24 25 26 27
        à direita: 23 24 25 33 40 44 45 52
    tipos <tipoint> (60)
        à esquerda: 28 29 30
        à direita: 31
    novavar <nos> (61)
        à esquerda: 31
        à direita: 3
    atribuir <nos> (62)
        à esquerda: 33
        à direita: 34 60
    $@1 (63)
        à esquerda: 32
        à direita: 33
    atribuirfim <nos> (64)
        à esquerda: 34
        à direita: 2 60 61
    posinc <nos> (65)
        à esquerda: 35
        à direita: 37
    posdec <nos> (66)
        à esquerda: 36
        à direita: 38
    incdec <nos> (67)
        à esquerda: 37 38
        à direita: 39 61
    incdecfim <nos> (68)
        à esquerda: 39
        à direita: 9
    escrever <nos> (69)
        à esquerda: 40
        à direita: 4
    ler <nos> (70)
        à esquerda: 41
        à direita: 5
    operadorL <tipoint> (71)
        à esquerda: 42 43
        à direita: 53
    varlogica <nos> (72)
        à esquerda: 44 45
        à direita: 53 56
    relacional <tipoint> (73)
        à esquerda: 46 47 48 49 50 51
        à direita: 52
    opcomp <nos> (74)
        à esquerda: 52
        à direita: 55
    oplogica <nos> (75)
        à esquerda: 53
        à direita: 54
    opLogicas <nos> (76)
        à esquerda: 54 55 56
        à direita: 57 60 61 62
    condif <nos> (77)
        à esquerda: 57
        à direita: 58 59
    condifelse <nos> (78)
        à esquerda: 58 59
        à direita: 8
    loopfor <nos> (79)
        à esquerda: 60 61
        à direita: 6
    loopwhile <nos> (80)
        à esquerda: 62
        à direita: 7


Estado 0

    0 $accept: . inicio $end

    INICIOPROG  deslocar, e ir ao estado 1

    inicio  ir ao estado 2


Estado 1

    1 inicio: INICIOPROG . sentencas FIMPROG

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]
    $padrão  reduzir usando a regra 10 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 13
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 2

    0 $accept: inicio . $end

    $end  deslocar, e ir ao estado 28


Estado 3

   33 atribuir: VARIAVEL . $@1 ATRIBUICAO expressaoA
   35 posinc: VARIAVEL . SOMA SOMA
   36 posdec: VARIAVEL . SUB SUB

    SOMA  deslocar, e ir ao estado 29
    SUB   deslocar, e ir ao estado 30

    $padrão  reduzir usando a regra 32 ($@1)

    $@1  ir ao estado 31


Estado 4

   28 tipos: T_INT .

    $padrão  reduzir usando a regra 28 (tipos)


Estado 5

   29 tipos: T_CHAR .

    $padrão  reduzir usando a regra 29 (tipos)


Estado 6

   30 tipos: T_REAL .

    $padrão  reduzir usando a regra 30 (tipos)


Estado 7

   57 condif: IF . ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    ABREP  deslocar, e ir ao estado 32


Estado 8

   62 loopwhile: WHILE . ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    ABREP  deslocar, e ir ao estado 33


Estado 9

   60 loopfor: FOR . ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO
   61        | FOR . ABREP atribuirfim opLogicas PTVIRGULA incdec FECHAP INICIOBLOCO sentencas FIMBLOCO

    ABREP  deslocar, e ir ao estado 34


Estado 10

   41 ler: ENTRADA . ABREP VARIAVEL FECHAP PTVIRGULA

    ABREP  deslocar, e ir ao estado 35


Estado 11

   40 escrever: SAIDA . ABREP expressaoA FECHAP PTVIRGULA

    ABREP  deslocar, e ir ao estado 36


Estado 12

   11 sentencas: sentenca .

    $padrão  reduzir usando a regra 11 (sentencas)


Estado 13

    1 inicio: INICIOPROG sentencas . FIMPROG
   12 sentencas: sentencas . sentenca

    VARIAVEL  deslocar, e ir ao estado 3
    FIMPROG   deslocar, e ir ao estado 37
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    FIMPROG   [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]

    sentenca     ir ao estado 38
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 14

   31 novavar: tipos . VARIAVEL PTVIRGULA

    VARIAVEL  deslocar, e ir ao estado 39


Estado 15

    3 sentenca: novavar .

    $padrão  reduzir usando a regra 3 (sentenca)


Estado 16

   34 atribuirfim: atribuir . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 40


Estado 17

    2 sentenca: atribuirfim .

    $padrão  reduzir usando a regra 2 (sentenca)


Estado 18

   37 incdec: posinc .

    $padrão  reduzir usando a regra 37 (incdec)


Estado 19

   38 incdec: posdec .

    $padrão  reduzir usando a regra 38 (incdec)


Estado 20

   39 incdecfim: incdec . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 41


Estado 21

    9 sentenca: incdecfim .

    $padrão  reduzir usando a regra 9 (sentenca)


Estado 22

    4 sentenca: escrever .

    $padrão  reduzir usando a regra 4 (sentenca)


Estado 23

    5 sentenca: ler .

    $padrão  reduzir usando a regra 5 (sentenca)


Estado 24

   58 condifelse: condif .
   59           | condif . ELSE INICIOBLOCO sentencas FIMBLOCO

    ELSE  deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 58 (condifelse)


Estado 25

    8 sentenca: condifelse .

    $padrão  reduzir usando a regra 8 (sentenca)


Estado 26

    6 sentenca: loopfor .

    $padrão  reduzir usando a regra 6 (sentenca)


Estado 27

    7 sentenca: loopwhile .

    $padrão  reduzir usando a regra 7 (sentenca)


Estado 28

    0 $accept: inicio $end .

    $padrão  aceitar


Estado 29

   35 posinc: VARIAVEL SOMA . SOMA

    SOMA  deslocar, e ir ao estado 43


Estado 30

   36 posdec: VARIAVEL SUB . SUB

    SUB  deslocar, e ir ao estado 44


Estado 31

   33 atribuir: VARIAVEL $@1 . ATRIBUICAO expressaoA

    ATRIBUICAO  deslocar, e ir ao estado 45


Estado 32

   57 condif: IF ABREP . opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    NOT       deslocar, e ir ao estado 51
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 56
    varlogica   ir ao estado 57
    opcomp      ir ao estado 58
    oplogica    ir ao estado 59
    opLogicas   ir ao estado 60


Estado 33

   62 loopwhile: WHILE ABREP . opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    NOT       deslocar, e ir ao estado 51
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 56
    varlogica   ir ao estado 57
    opcomp      ir ao estado 58
    oplogica    ir ao estado 59
    opLogicas   ir ao estado 61


Estado 34

   60 loopfor: FOR ABREP . atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO
   61        | FOR ABREP . atribuirfim opLogicas PTVIRGULA incdec FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 62

    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 63


Estado 35

   41 ler: ENTRADA ABREP . VARIAVEL FECHAP PTVIRGULA

    VARIAVEL  deslocar, e ir ao estado 64


Estado 36

   40 escrever: SAIDA ABREP . expressaoA FECHAP PTVIRGULA

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 65


Estado 37

    1 inicio: INICIOPROG sentencas FIMPROG .

    $padrão  reduzir usando a regra 1 (inicio)


Estado 38

   12 sentencas: sentencas sentenca .

    $padrão  reduzir usando a regra 12 (sentencas)


Estado 39

   31 novavar: tipos VARIAVEL . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 66


Estado 40

   34 atribuirfim: atribuir PTVIRGULA .

    $padrão  reduzir usando a regra 34 (atribuirfim)


Estado 41

   39 incdecfim: incdec PTVIRGULA .

    $padrão  reduzir usando a regra 39 (incdecfim)


Estado 42

   59 condifelse: condif ELSE . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 67


Estado 43

   35 posinc: VARIAVEL SOMA SOMA .

    $padrão  reduzir usando a regra 35 (posinc)


Estado 44

   36 posdec: VARIAVEL SUB SUB .

    $padrão  reduzir usando a regra 36 (posdec)


Estado 45

   33 atribuir: VARIAVEL $@1 ATRIBUICAO . expressaoA

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 68


Estado 46

   13 varint: VARIAVEL .

    $padrão  reduzir usando a regra 13 (varint)


Estado 47

   14 varint: INT .

    $padrão  reduzir usando a regra 14 (varint)


Estado 48

   15 valor: CHAR .

    $padrão  reduzir usando a regra 15 (valor)


Estado 49

   16 valor: REAL .

    $padrão  reduzir usando a regra 16 (valor)


Estado 50

   25 expressaoA: SUB . expressaoA

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 69


Estado 51

   44 varlogica: NOT . expressaoA

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 70


Estado 52

   23 expressaoA: ABREP . expressaoA FECHAP

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 71


Estado 53

   17 valor: varint .
   18 opmod: varint . MOD varint

    MOD  deslocar, e ir ao estado 72

    $padrão  reduzir usando a regra 17 (valor)


Estado 54

   26 expressaoA: valor .

    $padrão  reduzir usando a regra 26 (expressaoA)


Estado 55

   27 expressaoA: opmod .

    $padrão  reduzir usando a regra 27 (expressaoA)


Estado 56

   24 expressaoA: expressaoA . operacoes expressaoA
   45 varlogica: expressaoA .
   52 opcomp: expressaoA . relacional expressaoA

    SOMA        deslocar, e ir ao estado 73
    SUB         deslocar, e ir ao estado 74
    MULTI       deslocar, e ir ao estado 75
    DIVI        deslocar, e ir ao estado 76
    IGUAL       deslocar, e ir ao estado 77
    MAIORIGUAL  deslocar, e ir ao estado 78
    MENORIGUAL  deslocar, e ir ao estado 79
    MAIOR       deslocar, e ir ao estado 80
    MENOR       deslocar, e ir ao estado 81
    DIFERENTE   deslocar, e ir ao estado 82

    $padrão  reduzir usando a regra 45 (varlogica)

    operacoes   ir ao estado 83
    relacional  ir ao estado 84


Estado 57

   53 oplogica: varlogica . operadorL varlogica
   56 opLogicas: varlogica .

    AND  deslocar, e ir ao estado 85
    OR   deslocar, e ir ao estado 86

    $padrão  reduzir usando a regra 56 (opLogicas)

    operadorL  ir ao estado 87


Estado 58

   55 opLogicas: opcomp .

    $padrão  reduzir usando a regra 55 (opLogicas)


Estado 59

   54 opLogicas: oplogica .

    $padrão  reduzir usando a regra 54 (opLogicas)


Estado 60

   57 condif: IF ABREP opLogicas . FECHAP INICIOBLOCO sentencas FIMBLOCO

    FECHAP  deslocar, e ir ao estado 88


Estado 61

   62 loopwhile: WHILE ABREP opLogicas . FECHAP INICIOBLOCO sentencas FIMBLOCO

    FECHAP  deslocar, e ir ao estado 89


Estado 62

   33 atribuir: VARIAVEL . $@1 ATRIBUICAO expressaoA

    $padrão  reduzir usando a regra 32 ($@1)

    $@1  ir ao estado 31


Estado 63

   60 loopfor: FOR ABREP atribuirfim . opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO
   61        | FOR ABREP atribuirfim . opLogicas PTVIRGULA incdec FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    NOT       deslocar, e ir ao estado 51
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 56
    varlogica   ir ao estado 57
    opcomp      ir ao estado 58
    oplogica    ir ao estado 59
    opLogicas   ir ao estado 90


Estado 64

   41 ler: ENTRADA ABREP VARIAVEL . FECHAP PTVIRGULA

    FECHAP  deslocar, e ir ao estado 91


Estado 65

   24 expressaoA: expressaoA . operacoes expressaoA
   40 escrever: SAIDA ABREP expressaoA . FECHAP PTVIRGULA

    SOMA    deslocar, e ir ao estado 73
    SUB     deslocar, e ir ao estado 74
    MULTI   deslocar, e ir ao estado 75
    DIVI    deslocar, e ir ao estado 76
    FECHAP  deslocar, e ir ao estado 92

    operacoes  ir ao estado 83


Estado 66

   31 novavar: tipos VARIAVEL PTVIRGULA .

    $padrão  reduzir usando a regra 31 (novavar)


Estado 67

   59 condifelse: condif ELSE INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]
    $padrão  reduzir usando a regra 10 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 93
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 68

   24 expressaoA: expressaoA . operacoes expressaoA
   33 atribuir: VARIAVEL $@1 ATRIBUICAO expressaoA .

    SOMA   deslocar, e ir ao estado 73
    SUB    deslocar, e ir ao estado 74
    MULTI  deslocar, e ir ao estado 75
    DIVI   deslocar, e ir ao estado 76

    $padrão  reduzir usando a regra 33 (atribuir)

    operacoes  ir ao estado 83


Estado 69

   24 expressaoA: expressaoA . operacoes expressaoA
   25           | SUB expressaoA .

    SOMA   deslocar, e ir ao estado 73
    SUB    deslocar, e ir ao estado 74
    MULTI  deslocar, e ir ao estado 75
    DIVI   deslocar, e ir ao estado 76

    SOMA      [reduzir usando a regra 25 (expressaoA)]
    SUB       [reduzir usando a regra 25 (expressaoA)]
    MULTI     [reduzir usando a regra 25 (expressaoA)]
    DIVI      [reduzir usando a regra 25 (expressaoA)]
    $padrão  reduzir usando a regra 25 (expressaoA)

    operacoes  ir ao estado 83


Estado 70

   24 expressaoA: expressaoA . operacoes expressaoA
   44 varlogica: NOT expressaoA .

    SOMA   deslocar, e ir ao estado 73
    SUB    deslocar, e ir ao estado 74
    MULTI  deslocar, e ir ao estado 75
    DIVI   deslocar, e ir ao estado 76

    $padrão  reduzir usando a regra 44 (varlogica)

    operacoes  ir ao estado 83


Estado 71

   23 expressaoA: ABREP expressaoA . FECHAP
   24           | expressaoA . operacoes expressaoA

    SOMA    deslocar, e ir ao estado 73
    SUB     deslocar, e ir ao estado 74
    MULTI   deslocar, e ir ao estado 75
    DIVI    deslocar, e ir ao estado 76
    FECHAP  deslocar, e ir ao estado 94

    operacoes  ir ao estado 83


Estado 72

   18 opmod: varint MOD . varint

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47

    varint  ir ao estado 95


Estado 73

   19 operacoes: SOMA .

    $padrão  reduzir usando a regra 19 (operacoes)


Estado 74

   20 operacoes: SUB .

    $padrão  reduzir usando a regra 20 (operacoes)


Estado 75

   21 operacoes: MULTI .

    $padrão  reduzir usando a regra 21 (operacoes)


Estado 76

   22 operacoes: DIVI .

    $padrão  reduzir usando a regra 22 (operacoes)


Estado 77

   46 relacional: IGUAL .

    $padrão  reduzir usando a regra 46 (relacional)


Estado 78

   47 relacional: MAIORIGUAL .

    $padrão  reduzir usando a regra 47 (relacional)


Estado 79

   48 relacional: MENORIGUAL .

    $padrão  reduzir usando a regra 48 (relacional)


Estado 80

   49 relacional: MAIOR .

    $padrão  reduzir usando a regra 49 (relacional)


Estado 81

   50 relacional: MENOR .

    $padrão  reduzir usando a regra 50 (relacional)


Estado 82

   51 relacional: DIFERENTE .

    $padrão  reduzir usando a regra 51 (relacional)


Estado 83

   24 expressaoA: expressaoA operacoes . expressaoA

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 96


Estado 84

   52 opcomp: expressaoA relacional . expressaoA

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 97


Estado 85

   42 operadorL: AND .

    $padrão  reduzir usando a regra 42 (operadorL)


Estado 86

   43 operadorL: OR .

    $padrão  reduzir usando a regra 43 (operadorL)


Estado 87

   53 oplogica: varlogica operadorL . varlogica

    VARIAVEL  deslocar, e ir ao estado 46
    INT       deslocar, e ir ao estado 47
    CHAR      deslocar, e ir ao estado 48
    REAL      deslocar, e ir ao estado 49
    SUB       deslocar, e ir ao estado 50
    NOT       deslocar, e ir ao estado 51
    ABREP     deslocar, e ir ao estado 52

    varint      ir ao estado 53
    valor       ir ao estado 54
    opmod       ir ao estado 55
    expressaoA  ir ao estado 98
    varlogica   ir ao estado 99


Estado 88

   57 condif: IF ABREP opLogicas FECHAP . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 100


Estado 89

   62 loopwhile: WHILE ABREP opLogicas FECHAP . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 101


Estado 90

   60 loopfor: FOR ABREP atribuirfim opLogicas . PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO
   61        | FOR ABREP atribuirfim opLogicas . PTVIRGULA incdec FECHAP INICIOBLOCO sentencas FIMBLOCO

    PTVIRGULA  deslocar, e ir ao estado 102


Estado 91

   41 ler: ENTRADA ABREP VARIAVEL FECHAP . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 103


Estado 92

   40 escrever: SAIDA ABREP expressaoA FECHAP . PTVIRGULA

    PTVIRGULA  deslocar, e ir ao estado 104


Estado 93

   12 sentencas: sentencas . sentenca
   59 condifelse: condif ELSE INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 105
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]

    sentenca     ir ao estado 38
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 94

   23 expressaoA: ABREP expressaoA FECHAP .

    $padrão  reduzir usando a regra 23 (expressaoA)


Estado 95

   18 opmod: varint MOD varint .

    $padrão  reduzir usando a regra 18 (opmod)


Estado 96

   24 expressaoA: expressaoA . operacoes expressaoA
   24           | expressaoA operacoes expressaoA .

    SOMA   deslocar, e ir ao estado 73
    SUB    deslocar, e ir ao estado 74
    MULTI  deslocar, e ir ao estado 75
    DIVI   deslocar, e ir ao estado 76

    SOMA      [reduzir usando a regra 24 (expressaoA)]
    SUB       [reduzir usando a regra 24 (expressaoA)]
    MULTI     [reduzir usando a regra 24 (expressaoA)]
    DIVI      [reduzir usando a regra 24 (expressaoA)]
    $padrão  reduzir usando a regra 24 (expressaoA)

    operacoes  ir ao estado 83


Estado 97

   24 expressaoA: expressaoA . operacoes expressaoA
   52 opcomp: expressaoA relacional expressaoA .

    SOMA   deslocar, e ir ao estado 73
    SUB    deslocar, e ir ao estado 74
    MULTI  deslocar, e ir ao estado 75
    DIVI   deslocar, e ir ao estado 76

    $padrão  reduzir usando a regra 52 (opcomp)

    operacoes  ir ao estado 83


Estado 98

   24 expressaoA: expressaoA . operacoes expressaoA
   45 varlogica: expressaoA .

    SOMA   deslocar, e ir ao estado 73
    SUB    deslocar, e ir ao estado 74
    MULTI  deslocar, e ir ao estado 75
    DIVI   deslocar, e ir ao estado 76

    $padrão  reduzir usando a regra 45 (varlogica)

    operacoes  ir ao estado 83


Estado 99

   53 oplogica: varlogica operadorL varlogica .

    $padrão  reduzir usando a regra 53 (oplogica)


Estado 100

   57 condif: IF ABREP opLogicas FECHAP INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]
    $padrão  reduzir usando a regra 10 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 106
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 101

   62 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]
    $padrão  reduzir usando a regra 10 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 107
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 102

   60 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA . atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO
   61        | FOR ABREP atribuirfim opLogicas PTVIRGULA . incdec FECHAP INICIOBLOCO sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3

    atribuir  ir ao estado 108
    posinc    ir ao estado 18
    posdec    ir ao estado 19
    incdec    ir ao estado 109


Estado 103

   41 ler: ENTRADA ABREP VARIAVEL FECHAP PTVIRGULA .

    $padrão  reduzir usando a regra 41 (ler)


Estado 104

   40 escrever: SAIDA ABREP expressaoA FECHAP PTVIRGULA .

    $padrão  reduzir usando a regra 40 (escrever)


Estado 105

   59 condifelse: condif ELSE INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 59 (condifelse)


Estado 106

   12 sentencas: sentencas . sentenca
   57 condif: IF ABREP opLogicas FECHAP INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 110
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]

    sentenca     ir ao estado 38
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 107

   12 sentencas: sentencas . sentenca
   62 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 111
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]

    sentenca     ir ao estado 38
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 108

   60 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir . FECHAP INICIOBLOCO sentencas FIMBLOCO

    FECHAP  deslocar, e ir ao estado 112


Estado 109

   61 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA incdec . FECHAP INICIOBLOCO sentencas FIMBLOCO

    FECHAP  deslocar, e ir ao estado 113


Estado 110

   57 condif: IF ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 57 (condif)


Estado 111

   62 loopwhile: WHILE ABREP opLogicas FECHAP INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 62 (loopwhile)


Estado 112

   60 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 114


Estado 113

   61 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA incdec FECHAP . INICIOBLOCO sentencas FIMBLOCO

    INICIOBLOCO  deslocar, e ir ao estado 115


Estado 114

   60 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]
    $padrão  reduzir usando a regra 10 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 116
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 115

   61 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA incdec FECHAP INICIOBLOCO . sentencas FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]
    $padrão  reduzir usando a regra 10 (sentenca)

    sentenca     ir ao estado 12
    sentencas    ir ao estado 117
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 116

   12 sentencas: sentencas . sentenca
   60 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 118
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]

    sentenca     ir ao estado 38
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 117

   12 sentencas: sentencas . sentenca
   61 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA incdec FECHAP INICIOBLOCO sentencas . FIMBLOCO

    VARIAVEL  deslocar, e ir ao estado 3
    FIMBLOCO  deslocar, e ir ao estado 119
    T_INT     deslocar, e ir ao estado 4
    T_CHAR    deslocar, e ir ao estado 5
    T_REAL    deslocar, e ir ao estado 6
    IF        deslocar, e ir ao estado 7
    WHILE     deslocar, e ir ao estado 8
    FOR       deslocar, e ir ao estado 9
    ENTRADA   deslocar, e ir ao estado 10
    SAIDA     deslocar, e ir ao estado 11

    VARIAVEL  [reduzir usando a regra 10 (sentenca)]
    FIMBLOCO  [reduzir usando a regra 10 (sentenca)]
    T_INT     [reduzir usando a regra 10 (sentenca)]
    T_CHAR    [reduzir usando a regra 10 (sentenca)]
    T_REAL    [reduzir usando a regra 10 (sentenca)]
    IF        [reduzir usando a regra 10 (sentenca)]
    WHILE     [reduzir usando a regra 10 (sentenca)]
    FOR       [reduzir usando a regra 10 (sentenca)]
    ENTRADA   [reduzir usando a regra 10 (sentenca)]
    SAIDA     [reduzir usando a regra 10 (sentenca)]

    sentenca     ir ao estado 38
    tipos        ir ao estado 14
    novavar      ir ao estado 15
    atribuir     ir ao estado 16
    atribuirfim  ir ao estado 17
    posinc       ir ao estado 18
    posdec       ir ao estado 19
    incdec       ir ao estado 20
    incdecfim    ir ao estado 21
    escrever     ir ao estado 22
    ler          ir ao estado 23
    condif       ir ao estado 24
    condifelse   ir ao estado 25
    loopfor      ir ao estado 26
    loopwhile    ir ao estado 27


Estado 118

   60 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA atribuir FECHAP INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 60 (loopfor)


Estado 119

   61 loopfor: FOR ABREP atribuirfim opLogicas PTVIRGULA incdec FECHAP INICIOBLOCO sentencas FIMBLOCO .

    $padrão  reduzir usando a regra 61 (loopfor)
